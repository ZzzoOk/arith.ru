{"version":3,"sources":["main/Main.module.css","settings/Settings.module.css","stats/Stats.module.css","main/Main.jsx","menu/Menu.jsx","stats/Stats.jsx","settings/Settings.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","task","answer","counter","startTime","maxCount","results","Menu","props","id","styles","menu","to","React","Component","Main","getRandomInt","Math","floor","random","newTask","innerText","incorrect","style","color","setTimeout","incCounter","document","getElementById","last","correct","push","Date","setState","sessionStorage","setItem","JSON","stringify","history","getResult","taskNums","split","handleButtonClick","e","target","result","startsWith","length","handleTaskClick","init","state","username","getItem","parse","this","main","onClick","className","colSpan","btn0","Result","Stats","currentResult","sort","a","b","map","r","leaderboard","Settings","handleInput","value","handleChange","htmlFor","type","name","onChange","count","onInput","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8ca48e43.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__ZnQir\",\"task\":\"Main_task__3GsLL\",\"btn0\":\"Main_btn0__3o-m8\",\"counter\":\"Main_counter__gdxYu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Settings_main__-yezg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leaderboard\":\"Stats_leaderboard__FcHM8\",\"last\":\"Stats_last__37UrW\"};","import React from 'react';\r\nimport styles from './Main.module.css';\r\nimport Menu from '../menu/Menu'\r\n\r\nlet task;\r\nlet answer;\r\nlet counter;\r\nlet startTime;\r\nlet maxCount;\r\nlet results;\r\nclass Main extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: sessionStorage.getItem('username') ?? 'anon',\r\n            maxCount: sessionStorage.getItem('maxCount') ?? 5,\r\n            results: JSON.parse(sessionStorage.getItem('results' + sessionStorage.getItem('maxCount') ?? 5)) ?? []\r\n        };\r\n\r\n        maxCount = this.state.maxCount;\r\n        results = this.state.results;\r\n    }\r\n\r\n    getRandomInt = () => {\r\n        return Math.floor(Math.random() * (10 - 1)) + 1;\r\n    }\r\n\r\n    newTask = () => {\r\n        task.innerText = this.getRandomInt() + ' + ' + this.getRandomInt();\r\n    }\r\n\r\n    incorrect = () => {\r\n        answer = '';\r\n        task.style.color = 'red';\r\n        setTimeout(() => {\r\n            task.style.color = 'black';\r\n        }, 250);\r\n    }\r\n\r\n    incCounter = () => {\r\n        document.getElementById(styles.counter).innerText = `${++counter}/${maxCount}`;\r\n    }\r\n\r\n    last = () => {\r\n        return counter == maxCount;\r\n    }\r\n\r\n    correct = () => {\r\n        if (this.last()) {\r\n            results.push(((new Date) - startTime) / 1000);\r\n            this.setState({ results: results });\r\n            sessionStorage.setItem('results' + maxCount, JSON.stringify(results));\r\n            this.props.history.push('/stats');\r\n        }\r\n\r\n        startTime = startTime ?? new Date();\r\n\r\n        answer = '';\r\n        this.incCounter();\r\n        this.newTask();\r\n    }\r\n\r\n    getResult = () => {\r\n        let taskNums = task.innerText.split('+');\r\n        return +taskNums[0] + +taskNums[1] + '';\r\n    }\r\n\r\n    handleButtonClick = (e) => {\r\n        answer += e.target.innerText;\r\n\r\n        let result = this.getResult();\r\n        if (result.startsWith(answer) && result == answer) {\r\n            this.correct();\r\n        } else if (!result.startsWith(answer) || answer.length >= result.length) {\r\n            this.incorrect();\r\n        }\r\n    }\r\n\r\n    handleTaskClick = () => {\r\n        this.init();\r\n    }\r\n\r\n    init = () => {\r\n        answer = '';\r\n        counter = 0;\r\n        startTime = null;\r\n        task.innerText = '1 + 1';\r\n        document.getElementById(styles.counter).innerText = `0/${maxCount}`;\r\n    }\r\n\r\n    componentDidMount() {\r\n        task = document.getElementById(styles.task);\r\n        this.init();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <header>\r\n                    <Menu />\r\n                </header>\r\n                <main id={styles.main}>\r\n                    <table>\r\n                        <caption id={styles.task} onClick={this.init}>\r\n                            1 + 1\r\n                        </caption>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td><span className='button' onClick={this.handleButtonClick}>7</span></td>\r\n                                <td><span className='button' onClick={this.handleButtonClick}>8</span></td>\r\n                                <td><span className='button' onClick={this.handleButtonClick}>9</span></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><span className='button' onClick={this.handleButtonClick}>4</span></td>\r\n                                <td><span className='button' onClick={this.handleButtonClick}>5</span></td>\r\n                                <td><span className='button' onClick={this.handleButtonClick}>6</span></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><span className='button' onClick={this.handleButtonClick}>1</span></td>\r\n                                <td><span className='button' onClick={this.handleButtonClick}>2</span></td>\r\n                                <td><span className='button' onClick={this.handleButtonClick}>3</span></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td colSpan='3'><span id={styles.btn0} className='button' onClick={this.handleButtonClick}>0</span></td>\r\n                            </tr>\r\n                        </tbody>\r\n                        <tfoot>\r\n                            <tr>\r\n                                <td id={styles.counter} colSpan='3'>0/50</td>\r\n                            </tr>\r\n                        </tfoot>\r\n                    </table>\r\n                </main>\r\n                <footer>\r\n                </footer>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './Menu.module.css';\r\n\r\nclass Menu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav id={styles.menu}>\r\n                <ul>\r\n                    <li><NavLink to='/'>Home</NavLink></li>\r\n                    <li><NavLink to='/stats'>Stats</NavLink></li>\r\n                    <li><NavLink to='/settings'>Settings</NavLink></li>\r\n                </ul>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './Stats.module.css';\r\nimport Menu from '../menu/Menu'\r\n\r\nconst Result = (props) => {\r\n    return (\r\n        <tr className={props.last ? styles.last : null}>\r\n            <td>{props.username}</td>\r\n            <td>{props.result}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nclass Stats extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: sessionStorage.getItem('username') ?? 'anon',\r\n            maxCount: sessionStorage.getItem('maxCount') ?? 5,\r\n            results: JSON.parse(sessionStorage.getItem('results' + sessionStorage.getItem('maxCount') ?? 5)) ?? []\r\n        };\r\n    }\r\n\r\n    render() {\r\n        let results = [...this.state.results];\r\n        let currentResult = results[results.length - 1];\r\n        results = results.sort((a, b) => { return a - b; }).map(r => <Result username={this.state.username} result={r} last={r == currentResult} />);\r\n        return (\r\n            <>\r\n                <header>\r\n                    <Menu />\r\n                </header>\r\n                <main>\r\n                    <table id={styles.leaderboard}>\r\n                        <caption>Leaderboard</caption>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Username</th>\r\n                                <th>Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                results\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </main>\r\n                <footer>\r\n                </footer>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Stats;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './Settings.module.css';\r\nimport Menu from '../menu/Menu'\r\n\r\nclass Settings extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: sessionStorage.getItem('username') ?? 'anon',\r\n            maxCount: sessionStorage.getItem('maxCount') ?? 5\r\n        };\r\n    }\r\n\r\n    handleInput = (e) => {\r\n        this.setState({ maxCount: e.target.value });\r\n        sessionStorage.setItem('maxCount', e.target.value);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ username: e.target.value });\r\n        sessionStorage.setItem('username', e.target.value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <header>\r\n                    <Menu />\r\n                </header>\r\n                <main id={styles.main}>\r\n                    <label htmlFor='username'>Username: </label>\r\n                    <input id={styles.username} type='text' name='username' onChange={this.handleChange} value={this.state.username} /><br />\r\n                    <label htmlFor='count'>Count: </label>\r\n                    <input id={styles.count} type='number' name='count' onInput={this.handleInput} value={this.state.maxCount} />\r\n                </main>\r\n                <footer>\r\n                </footer>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Settings;","import React from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport Main from './main/Main'\nimport Stats from './stats/Stats'\nimport Settings from './settings/Settings'\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path='/' component={Main} />\n      <Route path='/stats' component={Stats} />\n      <Route path='/settings' component={Settings} />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}